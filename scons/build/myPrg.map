
Memory Configuration

Name             Origin             Length             Attributes
FLASH            0x08000000         0x00010000         xr
RAM              0x20000000         0x00002000         xrw
MEMORY_B1        0x60000000         0x00000000         xr
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD build\main.o
                0x20002000                _estack = 0x20002000
                0x00000000                _Min_Heap_Size = 0x0
                0x00000080                _Min_Stack_Size = 0x80

.isr_vector     0x08000000        0x0
                0x08000000                . = ALIGN (0x4)
 *(.isr_vector)
                0x08000000                . = ALIGN (0x4)

.text           0x08000000       0xfc
                0x08000000                . = ALIGN (0x4)
 *(.text)
 .text          0x08000000        0x0 build\main.o
 *(.text*)
 .text.gpio_config
                0x08000000       0x60 build\main.o
                0x08000000                gpio_config
 .text.clock_config
                0x08000060       0x78 build\main.o
                0x08000060                clock_config
 .text.startup.main
                0x080000d8       0x24 build\main.o
                0x080000d8                main
 *(.glue_7)
 .glue_7        0x080000fc        0x0 linker stubs
 *(.glue_7t)
 .glue_7t       0x080000fc        0x0 linker stubs
 *(.eh_frame)
 *(.init)
 *(.fini)
                0x080000fc                . = ALIGN (0x4)
                0x080000fc                _etext = .

.vfp11_veneer   0x080000fc        0x0
 .vfp11_veneer  0x080000fc        0x0 linker stubs

.v4_bx          0x080000fc        0x0
 .v4_bx         0x080000fc        0x0 linker stubs

.iplt           0x080000fc        0x0
 .iplt          0x080000fc        0x0 build\main.o

.rel.dyn        0x080000fc        0x0
 .rel.iplt      0x080000fc        0x0 build\main.o

.rodata         0x080000fc        0x0
                0x080000fc                . = ALIGN (0x4)
 *(.rodata)
 *(.rodata*)
                0x080000fc                . = ALIGN (0x4)

.ARM.extab
 *(.ARM.extab* .gnu.linkonce.armextab.*)

.ARM            0x080000fc        0x0
                0x080000fc                __exidx_start = .
 *(.ARM.exidx*)
                0x080000fc                __exidx_end = .

.preinit_array  0x080000fc        0x0
                [!provide]                PROVIDE (__preinit_array_start = .)
 *(.preinit_array*)
                [!provide]                PROVIDE (__preinit_array_end = .)

.init_array     0x080000fc        0x0
                [!provide]                PROVIDE (__init_array_start = .)
 *(SORT_BY_NAME(.init_array.*))
 *(.init_array*)
                [!provide]                PROVIDE (__init_array_end = .)

.fini_array     0x080000fc        0x0
                [!provide]                PROVIDE (__fini_array_start = .)
 *(SORT_BY_NAME(.fini_array.*))
 *(.fini_array*)
                [!provide]                PROVIDE (__fini_array_end = .)
                0x080000fc                _sidata = LOADADDR (.data)

.data           0x20000000        0x0 load address 0x080000fc
                0x20000000                . = ALIGN (0x4)
                0x20000000                _sdata = .
 *(.data)
 .data          0x20000000        0x0 build\main.o
 *(.data*)
                0x20000000                . = ALIGN (0x4)
                0x20000000                _edata = .

.igot.plt       0x20000000        0x0 load address 0x080000fc
 .igot.plt      0x20000000        0x0 build\main.o
                0x20000000                . = ALIGN (0x4)

.bss            0x20000000        0x4 load address 0x080000fc
                0x20000000                _sbss = .
                0x20000000                __bss_start__ = _sbss
 *(.bss)
 .bss           0x20000000        0x0 build\main.o
 *(.bss*)
 .bss.i         0x20000000        0x4 build\main.o
                0x20000000                i
 *(COMMON)
                0x20000004                . = ALIGN (0x4)
                0x20000004                _ebss = .
                0x20000004                __bss_end__ = _ebss

._user_heap_stack
                0x20000004       0x80 load address 0x080000fc
                0x20000004                . = ALIGN (0x4)
                [!provide]                PROVIDE (end = .)
                [!provide]                PROVIDE (_end = .)
                0x20000004                . = (. + _Min_Heap_Size)
                0x20000084                . = (. + _Min_Stack_Size)
 *fill*         0x20000004       0x80 
                0x20000084                . = ALIGN (0x4)

.memory_b1_text
 *(.mb1text)
 *(.mb1text*)
 *(.mb1rodata)
 *(.mb1rodata*)

/DISCARD/
 libc.a(*)
 libm.a(*)
 libgcc.a(*)

.ARM.attributes
                0x00000000       0x2c
 *(.ARM.attributes)
 .ARM.attributes
                0x00000000       0x2c build\main.o
OUTPUT(build\myPrg.hex elf32-littlearm)

.debug_info     0x00000000      0x384
 .debug_info    0x00000000      0x384 build\main.o

.debug_abbrev   0x00000000      0x135
 .debug_abbrev  0x00000000      0x135 build\main.o

.debug_aranges  0x00000000       0x30
 .debug_aranges
                0x00000000       0x30 build\main.o

.debug_ranges   0x00000000       0x38
 .debug_ranges  0x00000000       0x38 build\main.o

.debug_line     0x00000000      0x2c0
 .debug_line    0x00000000      0x2c0 build\main.o

.debug_str      0x00000000      0x268
 .debug_str     0x00000000      0x268 build\main.o
                                0x2ad (size before relaxing)

.comment        0x00000000       0x75
 .comment       0x00000000       0x75 build\main.o
                                 0x76 (size before relaxing)

.debug_frame    0x00000000       0x4c
 .debug_frame   0x00000000       0x4c build\main.o

Cross Reference Table

Symbol                                            File
clock_config                                      build\main.o
gpio_config                                       build\main.o
i                                                 build\main.o
main                                              build\main.o
